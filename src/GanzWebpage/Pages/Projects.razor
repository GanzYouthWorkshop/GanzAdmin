@page "/projektek"
@page "/projektek/{Id}"
@using GanzAdmin.Database;
@using GanzAdmin.Database.Models;
@using GanzNet.Common

<div class="uk-container">
    <div class="uk-section uk-section-xsmall border-bottom">
        <div data-uk-grid="" class="uk-grid">
            <BreadCrumb Items="this.MenuList" />
        </div>
    </div>
</div>


<section class="uk-section">
    <div class="uk-container">
        <div class="uk-grid-large uk-grid" data-uk-grid="">
            <div class="uk-width-auto@m uk-first-column">
                <div class="boundary-align">
                    <div class="uk-visible@m uk-text-primary icon-category">
                        <span data-uk-icon="icon: cog; ratio: 3" class="uk-icon">
                            <img src="/img/projects.svg" width="60" height="60" />
                        </span>
                    </div>
                </div>
            </div>

            <div class="uk-width-expand@m padding-right@m padding-large-right@l">
                @if (this.SelectedProject == null)
                {
                    <PageTitle>Projetkjeink - Ganz Ifjúsági Műhely Egyesület</PageTitle>
                    <MergedHeadContent Master>
                        <meta property="og:title" content="Projetkjeink" />
                        <meta property='og:type' content='website' />
                        <meta property="og:url" content="http://www.ganzmuhely.hu/projektek" />
                    </MergedHeadContent>

                    <h1>Projetkjeink</h1>
                    <div class="uk-child-width-1-2@m uk-grid-match uk-grid-small uk-margin-medium-top uk-grid" data-uk-grid="">
                        @foreach (MemberProject project in this.MemberProjects)
                        {
                            <div class="uk-first-column">
                                <div class="uk-card uk-card uk-card-default uk-card-hover uk-card-body uk-inline uk-border-rounded">
                                    <a class="uk-position-cover" href="/projektek/@project.ToDisplayUrl()" aria-label="Basic Setup"></a>
                                    <div class="uk-grid-small uk-grid" data-uk-grid="">
                                        <div class="uk-width-auto uk-text-primary uk-flex uk-flex-middle uk-first-column">
                                            <span data-uk-icon="icon: cog; ratio: 2.6" class="uk-icon">
                                                <img width="52" height="52" src="@project.Logo" />
                                            </span>
                                        </div>
                                        <div class="uk-width-expand">
                                            <h3 class="uk-card-title uk-margin-remove uk-text-primary">
                                                <img width="24" height="24" src="./img/project-@(project.IsFinished ? "done" : "ongoing").svg" />
                                                @project.Name
                                            </h3>
                                            <p class="uk-text-muted uk-margin-remove">
                                                <WysiwygContentViewer Source="@project.Description" LimitComponents="1" LimitParagraphChars="100" />
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <PageTitle>@(this.SelectedProject.Name) - Ganz Ifjúsági Műhely Egyesület</PageTitle>
                    <MergedHeadContent Master>
                        <meta property="og:title" content="@(this.SelectedProject.Name)" />
                        <meta property='og:type' content='article' />
                        <meta property="og:url" content="http://www.ganzmuhely.hu/projektek/@(this.Id)" />
                        @if (!string.IsNullOrEmpty(this.SelectedProject.Logo))
                        {
                            <meta property="og:image" content="ttp://www.ganzmuhely.hu/@this.SelectedProject.Logo" />
                        }
                    </MergedHeadContent>

                    <h1>@this.SelectedProject.Name</h1>
                    <GanzNet.Common.WysiwygContentViewer Source="@this.SelectedProject.Description">
                        <FirstImage>
                            <MergedHeadContent>
                                <meta property="og:image" content="@context.Url" />
                            </MergedHeadContent>
                        </FirstImage>
                        <FirstParagraph>
                            <MergedHeadContent>
                                <meta property="og:description" content="@context">
                            </MergedHeadContent>
                        </FirstParagraph>
                    </GanzNet.Common.WysiwygContentViewer>
                    <hr class="uk-margin-large-top uk-margin-large-bottom">

                    <div class="timeline uk-margin-large-top">

                    @foreach (LogEntry entry in this.SelectedProject.ProjectLog.OrderByDescending(log => log.StartTime))
                    {
                        <div class="timeline-entry">
                            <div class="timeline-time">
                                <h5>@(entry.StartTime.ToString("yyyy.MM.dd, hh:mm"))</h5>
                            </div>
                            <div class="timeline-body">
                                <WysiwygContentViewer Source="@entry.Content" />
                                <hr />
                            </div>
                        </div>

                    }
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@code
{
    [Parameter]
    public string Id { get; set; }

    protected List<Tuple<string, string>> MenuList = new List<Tuple<string, string>>()
    {
        new Tuple<string, string>("/", "Kezdőlap"),
        new Tuple<string, string>("/projektek", "Projektek"),
    };

    private List<MemberProject> MemberProjects { get; set; } = new List<MemberProject>();
    private MemberProject SelectedProject { get; set; }

    protected override Task OnParametersSetAsync()
    {
        this.SelectedProject = null;
        this.MenuList = this.MenuList.Take(2).ToList();

        if (!string.IsNullOrEmpty(this.Id))
        {
            try
            {
                int id = this.Id.FromDisplayUrl();
                using (GanzAdminDbEngine db = GanzAdminDbEngine.GetInstance())
                {
                    this.SelectedProject = db.GetCollection<MemberProject>().FindById(id);
                    this.MenuList.Add(new Tuple<string, string>("/projektek/0", this.SelectedProject.Name));
                }

            }
            catch (Exception) { }
        }

        if (this.SelectedProject == null)
        {
            using (GanzAdminDbEngine db = GanzAdminDbEngine.GetInstance())
            {
                var items = db.GetCollection<MemberProject>()
                                    .FindAll()
                                    .OrderByDescending(t => t.ProjectLog.Count > 0 ? t.ProjectLog.Last().StartTime : new DateTime())
                                    .ToList();
                this.MemberProjects.Clear();
                this.MemberProjects.AddRange(items);
            }
        }

        return base.OnInitializedAsync();
    }
}
