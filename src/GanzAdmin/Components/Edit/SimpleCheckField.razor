@using GanzAdmin.Authentication.Components;

@inherits EditField<bool>

<p class="@(this.Inline ? "inline" : "")">
    <label for="@this.Name">@this.Display:</label>
    <AuthorizedView NeededRolesOR="@this.AuthOR" NeededRolesAND="@this.AuthAND">
        @switch (this.Type)
        {
            case "check":
                if (this.Value)
                {
                    <input type="checkbox" value="@this.Value" name="@this.Name" checked @onchange="OnValueChanged" />
                }
                else
                {
                    <input type="checkbox" value="@this.Value" name="@this.Name" @onchange="OnValueChanged" />
                }
                break;
            case "switch":
                <label class="switch">
                    @if (this.Value)
                    {
                        <input type="checkbox" value="@this.Value" name="@this.Name" checked @onchange="OnValueChanged" />
                    }
                    else
                    {
                        <input type="checkbox" value="@this.Value" name="@this.Name" @onchange="OnValueChanged" />
                    }
                    <span class="slider"></span>
                </label>
                break;
        }
    </AuthorizedView>
    <NonAuthorizedView NeededRolesOR="@this.AuthOR" NeededRolesAND="@this.AuthAND">
        <span>@this.Value</span>
    </NonAuthorizedView>
</p>

@code
{
    [Parameter]
    public bool Inline { get; set; }
}