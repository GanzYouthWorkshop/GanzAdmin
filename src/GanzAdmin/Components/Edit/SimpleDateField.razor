@using GanzAdmin.Authentication.Components;

@inherits EditField<DateTime>

<p>
    <label for="@this.Name">@this.Display:</label>
    <AuthorizedView NeededRolesOR="@this.AuthOR" NeededRolesAND="@this.AuthAND">
        <input type="text" value="@this.Value" name="@this.Name" class="dtp" @onchange="OnValueChanged" @ref="this.m_Dom" />
    </AuthorizedView>
    <NonAuthorizedView NeededRolesOR="@this.AuthOR" NeededRolesAND="@this.AuthAND">
        <span>@this.Value</span>
    </NonAuthorizedView>
</p>

@code
{
    [Inject]
    private IJSRuntime Js { get; set; }

    private ElementReference m_Dom;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if(firstRender)
        {
            this.Js.InvokeVoidAsync("createDatePicker", this.m_Dom);
        }
    }

    protected override Task OnValueChanged(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            Console.WriteLine(e.Value.ToString());

            this.Value = DateTime.Parse(e.Value.ToString());
            return this.ValueChanged.InvokeAsync(this.Value);
        }
        return Task.CompletedTask;
    }
}