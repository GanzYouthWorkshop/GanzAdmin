@using GanzAdmin.Authentication.Components;

@typeparam ItemType
@inherits EditField<ItemType>

<p class="@(this.Inline ? "inline" : "")">
    <label for="@this.Name">@this.Display:</label>
    <AuthorizedView NeededRolesOR="@this.AuthOR" NeededRolesAND="@this.AuthAND">
        <input type="number" value="@this.Value" name="@this.Name" step="@this.Step" @onchange="OnValueChanged" />
        <span>@this.Unit</span>
    </AuthorizedView>
    <NonAuthorizedView NeededRolesOR="@this.AuthOR" NeededRolesAND="@this.AuthAND">
        <span>@this.Value @this.Unit</span>
    </NonAuthorizedView>
</p>

@code
{
    [Parameter]
    public bool Inline { get; set; }

    [Parameter]
    public string Unit { get; set; }

    [Parameter]
    public float Step { get; set; } = 1;

    protected override Task OnValueChanged(ChangeEventArgs e)
    {
        decimal temp = 0;
        if (decimal.TryParse(e.Value.ToString(), out temp))
        {
            this.m_Value = (ItemType)Convert.ChangeType(temp, typeof(ItemType));

            this.Changed.InvokeAsync(this.m_Value);
            return this.ValueChanged.InvokeAsync(this.m_Value);
        }

        return null;
    }

}