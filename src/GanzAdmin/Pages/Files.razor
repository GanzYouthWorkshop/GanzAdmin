@page "/files/own"
@page "/files/shared"
@page "/files/secret"


@using GanzAdmin.Components.FileBrowser;
@using System.IO;
@using Microsoft.AspNetCore.Hosting;

<AuthorizedView NeededRolesOR="@($"{Permissions.AccessOwnFileStorage} {Permissions.AccessSecretFileStorage} {Permissions.AccessSharedFileStorage}")">
    <aside>
        @aside
    </aside>

    <main class="filebrowser">
        <nav class="breadcrumb">
            <span>&gt;</span><a href="" @onclick='() => OnBreadCrumb("")' @onclick:preventDefault>Home</a><span> / </span>
            @{
                if (this.m_Loaded)
                {
                    string build = "";
                    foreach (string s in WebPath.Split('\\', StringSplitOptions.RemoveEmptyEntries))
                    {
                        build += $"{s}\\";
                        string tmp = build;
                        <a href="@build" @onclick="() => OnBreadCrumb(tmp)" @onclick:preventDefault>@s</a><span> / </span>
                    }
                }
            }
        </nav>
        @if (this.m_Loaded)
        {
            foreach (string file in Directory.GetDirectories(this.LocalPath))
            {
                <FileBox IsFolder="true" Path="@file.Split('\\', '/').Last()" Clicked="OnSelect" DoubleClicked="OnOpen" />
            }

            foreach (string file in Directory.GetFiles(this.LocalPath))
            {
                <FileBox IsFolder="false" Path="@file.Split('\\', '/').Last()" Clicked="OnSelect" DoubleClicked="OnOpen" />
            }
        }
    </main>

    @if (this.WebSelectedFile != null)
    {
        <section class='popup' id='content'>
            <div class='shadow'></div>

            <div class='body'>
                <div class='header'>
                    <h2>@this.WebSelectedFile.Split("\\").Last()</h2>
                    <a href="#" class='button' @onclick='() => this.WebSelectedFile = null' @onclick:preventDefault></a>
                    <a href="@this.WebSelectedFile" target="_blank" download class='button'></a>
                </div>

                <div class="file-preview">
                    <FileViewer LocalFile="@this.LocalSelectedFile" WebFile="@this.WebSelectedFile" />
                </div>
            </div>
        </section>
    }
</AuthorizedView>

@code
{
    [Inject]
    private IWebHostEnvironment m_Hosting { get; set; }

    [Inject]
    protected NavigationManager NavMan { get; set; }

    [Inject]
    protected GanzAuthProvider Auth { get; set; }

    private bool m_Loaded;

    public string LocalPath
    {
        get { return GanzUtils.ProperPathCombine('\\', this.m_Hosting.ContentRootPath, "\\wwwroot\\", this.WebBase, this.WebPath); }
    }

    public string WebBase { get; set; }
    public string WebPath { get; set; }

    public string LocalSelectedFile { get { return GanzUtils.ProperPathCombine('\\', this.m_Hosting.ContentRootPath, "\\wwwroot\\", this.WebSelectedFile); } }
    public string WebSelectedFile { get; set; }

    public string aside { get; set; }

    protected override Task OnInitializedAsync()
    {
        return Task.Run(new Action(() =>
        {
            if (this.NavMan.Uri.Contains("own"))
            {
                string member = this.Auth.CurrentMember.Username;
                this.WebBase = @$"\filestorage\own\{member}";
                Directory.CreateDirectory(this.LocalPath);
            }
            else if (this.NavMan.Uri.Contains("shared"))
            {
                this.WebBase = @"\filestorage\shared";
            }
            else if (this.NavMan.Uri.Contains("secret"))
            {
                this.WebBase = @"\filestorage\secret";
            }
            else
            {
                this.WebBase = null;
            }

            this.WebPath = "\\";

            this.m_Loaded = true;
        }));
    }

    public void OnBreadCrumb(string sender)
    {
        this.WebPath = sender;
    }

    public void OnOpen(object sender)
    {
        FileBox info = sender as FileBox;
        if (info.IsFolder)
        {
            this.WebPath = GanzUtils.ProperPathCombine('\\', this.WebPath, info.Path);
        }
        else
        {
            this.WebSelectedFile = GanzUtils.ProperPathCombine('\\', this.WebBase, this.WebPath, info.Path);
        }
    }

    public void OnSelect(object sender)
    {
        FileBox info = sender as FileBox;
        if (info.IsFolder)
        {
            //TODO: SIDEBAR
        }
        else
        {
            //TODO: SIDEBAR
        }
    }
}