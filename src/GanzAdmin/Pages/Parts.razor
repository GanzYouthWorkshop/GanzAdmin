@page "/parts"
@page "/parts/{PopupDisplay}"

@inherits DataHandlingController<Part>

<aside class='@(this.ItemList == null ? "loading" : "")'>
    @if (this.ItemList != null)
    {
        <TreeLevel Items="@(this.ItemList.ToEntities<Part>())" 
                   Root="@null" 
                   Filter="@((e, r) => (e as Part).Category == null && r == null || (e as Part).Category?.Id == r?.Id)" />
    }
    <AuthorizedView NeededRolesOR="@Permissions.EditParts">
        <NavLink class="addlink" href="@($"/{this.BaseLink}/add")">Új @this.DataName</NavLink>
    </AuthorizedView>
</aside>

<main class='@(this.ItemList == null ? "loading" : "")'>
    @if (this.ItemList != null)
    {
        <div id='table-wrapper'>
            <table id='table-header'>
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Kategória</DataGridHeader>
                        <DataGridHeader IsCollapsible>Mennyiség</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Minimum raktári mennyiség</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Hiányos?</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Termékkódok</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Leírás</DataGridHeader>
                    </tr>
                </thead>
            </table>

            <table id='data' class="display nowrap">
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Kategória</DataGridHeader>
                        <DataGridHeader IsCollapsible>Mennyiség</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Minimum raktári mennyiség</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Hiányos?</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Termékkódok</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Leírás</DataGridHeader>
                    </tr>
                </thead>

                <tbody>
                    @foreach (Part item in this.ItemList)
                    {
                        long totalAmount = item.Stock.Sum(s => s.Amount);
                    <tr>
                        <td>
                            <NavLink href="@($"/{this.BaseLink}/{item.Id}")">@item.Name</NavLink>
                        </td>
                        <td>@item.Category.Name</td>
                        <td>
                            @foreach (Stockpile stock in item.Stock)
                            {
                                <span>@stock.Location?.Name</span>
                                <span> (@stock.Amount @item.StockUnit)</span>
                                <span><a @onclick="() => this.OnRemoveOneFromStock(stock)">-1</a></span>
                                <br />
                            }
                        </td>
                        <td>@item.MinimumStock</td>
                        <td>@(item.MinimumStock > totalAmount ? "❗" : "")</td>
                        <td>
                            <table>
                                @foreach (SupplySource supply in item.SupplySources)
                                {
                                    if (supply.Supplier != null)
                                    {
                                        <tr>
                                            <td>@supply.Supplier.Name</td>
                                            <td><a href="@(supply.Supplier.ItemLinkTemplate.Replace("####", supply.SupplierItemId))" target="_blank">@supply.SupplierItemId</a></td>
                                        </tr>
                                        @*<span></span>
                                        
                                        <br />*@
                                    }
                                }
                            </table>
                        </td>
                        <td>@item.ShortDescription</td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</main>

@if (this.SelectedItem != null)
{
    var defaults = new List<PartParameter>();

    <section class='popup' id='content'>
        <div class='shadow'></div>
        <div class='body'>
            <div class='header'>
                <h2>@this.PopupTitle</h2>
                <a class='button' href="@($"/{this.BaseLink}")"></a>
            </div>

            <EditForm method="post" EditContext="new EditContext(true)" OnSubmit="OnDefaultAddEditSubmit">
                <div class='dynamic'>
                    <SimpleTextField AuthOR="@Permissions.EditParts"
                                     Type="text"
                                     Display="Név"
                                     Name="@nameof(Part.Name)"
                                     @bind-Value="this.SelectedItem.Temporal.Name" />
                    <ComboBox AuthOR="@Permissions.EditParts"
                              ItemType="@Category"
                              Items="@GanzAdminDbEngine.Instance.Categories.FindAll()"
                              Name="@nameof(Part.Category)"
                              Display="Kategória"
                              @bind-Value="this.SelectedItem.Temporal.Category"
                              Changed="CategoryChanged" />
                    <SimpleNumberField AuthOR="@Permissions.EditParts"
                                       Type="text"
                                       Display="Min. készlet"
                                       Name="@nameof(Part.MinimumStock)"
                                       @bind-Value="this.SelectedItem.Temporal.MinimumStock" />
                    <SimpleTextField AuthOR="@Permissions.EditParts"
                                     Type="text"
                                     Display="Raktári készlet egység"
                                     Name="@nameof(Part.StockUnit)"
                                     @bind-Value="this.SelectedItem.Temporal.StockUnit" />
                    <SimpleTextField AuthOR="@Permissions.EditParts"
                                     Type="text"
                                     Display="Rövid leírás"
                                     Name="@nameof(Part.Name)"
                                     @bind-Value="this.SelectedItem.Temporal.ShortDescription" />

                    <h3>Raktérkészlet</h3>
                    @foreach (Stockpile stock in this.SelectedItem.Temporal.Stock)
                    {
                        <div>
                            <ComboBox Inline
                                      AuthOR="@Permissions.EditParts"
                                      ItemType="@Location"
                                      Items="@GanzAdminDbEngine.Instance.Locations.FindAll().Where(l => !l.IsVirtual)"
                                      Name="@nameof(Part.Category)"
                                      Display="Hely"
                                      @bind-Value="stock.Location" />
                            <SimpleNumberField Inline
                                               AuthOR="@Permissions.EditParts"
                                               Type="text"
                                               Display="Mennyiség"
                                               Name="@nameof(Stockpile.Amount)"
                                               ItemType="long"
                                               @bind-Value="@stock.Amount" />
                            <a @onclick="() => this.SelectedItem.Temporal.Stock.Remove(stock)">X</a>
                        </div>
                    }
                    <a @onclick="() => this.SelectedItem.Temporal.Stock.Add(new Stockpile())">Új leltári tétel</a>

                    <h3>Kategória paraméterek</h3>
                    @if (this.SelectedItem.Temporal.Category != null)
                    {
                        @foreach (PartParameter parameter in this.SelectedItem.Temporal.Category.DefaultParameters)
                        {
                            PartParameter temp = parameter;
                            PartParameter search = this.SelectedItem.Temporal.Parameters.FirstOrDefault(p => p.Name == temp.Name);
                            if (search == null)
                            {
                                search = new PartParameter()
                                {
                                    Name = temp.Name,
                                    Unit = temp.Unit,
                                    DefaultValue = temp.Value,
                                };
                                this.SelectedItem.Temporal.Parameters.Add(search);

                            }
                            defaults.Add(search);

                            <ParameterField ItemType="@PartParameter" AuthOR="@Permissions.EditParts" IsDefaultEditor="false" @bind-Value="search"></ParameterField>
                        }
                    }

                    <h3>Opcionális paraméterek</h3>
                    @foreach (PartParameter parameter in this.SelectedItem.Temporal.Parameters)
                    {
                        if (!defaults.Contains(parameter))
                        {
                            PartParameter temp = parameter;
                            <p>
                                <ParameterField Inline ItemType="@PartParameter" AuthOR="@Permissions.EditParts" IsDefaultEditor="true" @bind-Value="temp"></ParameterField>
                                <a @onclick="() => this.SelectedItem.Temporal.Parameters.Remove(temp)">X</a>
                            </p>
                        }
                    }
                    <a @onclick="() => this.SelectedItem.Temporal.Parameters.Add(new PartParameter())">Új paraméter</a>

                    <h3>Beszerezhetőségek</h3>
                    @foreach (SupplySource supply in this.SelectedItem.Temporal.SupplySources)
                    {
                        SupplySource temp = supply;
                        <div>
                            <ComboBox Inline
                                      AuthOR="@Permissions.EditParts"
                                      ItemType="@Supplier"
                                      Items="GanzAdminDbEngine.Instance.GetCollection<Supplier>().FindAll()"
                                      Name="@nameof(Part.SupplySources)"
                                      Display="Beszállító"
                                      @bind-Value="temp.Supplier" />

                            <SimpleTextField Inline
                                             AuthOR="@Permissions.EditParts"
                                             Type="text"
                                             Display="Beszállítói termékkód"
                                             Name="@nameof(SupplySource.SupplierItemId)"
                                             @bind-Value="temp.SupplierItemId" />
                            <a @onclick="() => this.SelectedItem.Temporal.SupplySources.Remove(supply)">X</a>
                        </div>
                    }
                    <a @onclick="() => this.SelectedItem.Temporal.SupplySources.Add(new SupplySource())">Új forrás</a>
                    <hr />
                </div>

                <AuthorizedView NeededRolesOR="@Permissions.EditParts">
                    <button type='submit'>Küldés</button>
                </AuthorizedView>
                @if (this.PopupDisplay != "add")
                {
                    <AuthorizedView NeededRolesOR="@Permissions.DeleteParts">
                        <input type='button' class="delete" value="Törlés" @onclick="OnDefaultDeleteSubmit" />
                    </AuthorizedView>
                }
            </EditForm>
        </div>
        @if (this.DialogLoading)
        {
            <div class='loading'> </div>
        }
    </section>
}


@code
{
    protected override string BaseLink { get; set; } = "parts";
    protected override string DataName { get; set; } = "alkatrész";

    private void CategoryChanged()
    {
        this.StateHasChanged();
    }

    private void OnRemoveOneFromStock(Stockpile stock)
    {
        if(stock.Amount > 0)
        {
            stock.Amount--;
            this.JS.InvokeVoidAsync("alertify.success", $"Egy elem leltárból eltávolítva!");
        }
        else
        {
            this.JS.InvokeVoidAsync("alertify.error", $"Üres lerakatból nem lehet elvenni!");
        }
    }
}
