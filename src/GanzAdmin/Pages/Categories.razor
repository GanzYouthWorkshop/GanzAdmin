@page "/categories"
@page "/categories/{PopupDisplay}"

@inherits DataHandlingController<Category>

    <aside class='@(this.ItemList == null ? "loading" : "")'>
        @if (this.ItemList != null)
        {
            <TreeLevel Items="@(this.ItemList.ToEntities<Category>())"
                       Root="@null"
                       Filter="@((e, r) => (e as Category).ParentCategory == null && r == null || (e as Category).ParentCategory?.Id == r?.Id)"
                       UrlTemplate="@((e) => $"/{this.BaseLink}/{e.Id}")" />
        }
        <AuthorizedView NeededRolesOR="@Permissions.EditCategories">
            <NavLink class="addlink" href="@($"/{this.BaseLink}/add")">Új @this.DataName</NavLink>
        </AuthorizedView>
    </aside>

<main class='@(this.ItemList == null ? "loading" : "")'>
    @if (this.ItemList != null)
    {
        <div id='table-wrapper'>
            <table id='data' class="display nowrap">
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Kategória</DataGridHeader>
                    </tr>
                </thead>

                <tbody>
                    @foreach (Category item in this.ItemList)
                    {
                        <tr>
                            <td><NavLink href="@($"/{this.BaseLink}/{item.Id}")">@item.Name</NavLink></td>
                            <td>@(item.ParentCategory != null ? item.ParentCategory.Name : "-")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</main>

@if (this.SelectedItem != null)
{
    <section class='popup' id='content'>
        <div class='shadow'></div>
        <div class='body'>
            <div class='header'>
                <h2>@this.PopupTitle</h2>
                <a class='button' href="@($"/{this.BaseLink}")" @onclick="BeforeCancel"></a>
            </div>

            <EditForm method="post" EditContext="new EditContext(true)" OnSubmit="OnDefaultAddEditSubmit">
                <div class='dynamic'>
                    <SimpleTextField AuthOR="@Permissions.EditCategories" Type="text" Display="Név" Name="@nameof(Category.Name)" @bind-Value="this.SelectedItem.Temporal.Name" />
                    <ComboBox AuthOR="@Permissions.EditCategories" ItemType="@Category" Items="@this.ItemList" Owner="this.SelectedItem.Temporal" Name="@nameof(Category.ParentCategory)" Display="Kategória" @bind-Value="this.SelectedItem.Temporal.ParentCategory" />
                    <FileField AuthOR="@Permissions.EditCategories" Display="Ikon" @bind-Value="@this.SelectedItem.Temporal.IconUrl" />

                    <h3>Alapértelmezett paraméterek</h3>
                    @foreach (PartParameter parameter in this.SelectedItem.Temporal.DefaultParameters)
                    {
                        PartParameter temp = parameter;
                        <p>
                            <ParameterField Inline ItemType="@PartParameter" AuthOR="@Permissions.EditParts" IsDefaultEditor="true" @bind-Value="temp"></ParameterField>
                            <AuthorizedView NeededRolesOR="@Permissions.EditParts">
                                <a @onclick="() => this.SelectedItem.Temporal.DefaultParameters.Remove(temp)"><i></i></a>
                            </AuthorizedView>
                        </p>
                    }
                    <AuthorizedView NeededRolesOR="@Permissions.EditParts">
                        <a @onclick="() => this.SelectedItem.Temporal.DefaultParameters.Add(new PartParameter())">Paraméter hozzáadása</a>
                    </AuthorizedView>
                </div>


                <AuthorizedView NeededRolesOR="@Permissions.EditCategories">
                    <button type='submit'>Küldés</button>
                </AuthorizedView>
                @if (this.PopupDisplay != "add")
                {
                    <AuthorizedView NeededRolesOR="@Permissions.DeleteLocations">
                        <input type='button' class="delete" value="Törlés" @onclick="OnDefaultDeleteSubmit" />
                    </AuthorizedView>
                }
            </EditForm>
        </div>
        @if (this.DialogLoading)
        {
            <div class='loading'> </div>
        }
    </section>
}


@code
{
    protected override string BaseLink { get; set; } = "categories";
    protected override string DataName { get; set; } = "kategória";

    protected override void BeforeEdit()
    {
        if (this.SelectedItem.Original.IconUrl != this.SelectedItem.Temporal.IconUrl)
        {
            this.DeleteUploadedFile(this.SelectedItem.Original.IconUrl);
        }
    }

    protected void BeforeCancel()
    {
        if (this.SelectedItem.Original.IconUrl != this.SelectedItem.Temporal.IconUrl)
        {
            this.DeleteUploadedFile(this.SelectedItem.Temporal.IconUrl);
        }
    }

    protected void BeforeDelete()
    {
        this.DeleteUploadedFile(this.SelectedItem.Temporal.IconUrl);
        this.DeleteUploadedFile(this.SelectedItem.Original.IconUrl);
    }
}
