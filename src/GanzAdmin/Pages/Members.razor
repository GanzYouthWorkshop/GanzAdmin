@page "/members"
@page "/members/{ShowID:int}"

@using GanzAdmin.Components.DataGrid;
@using GanzAdmin.Database;
@using GanzAdmin.Database.Models;

<aside class='loading'>
</aside>

<main class='@(this.MemberList == null ? "loading" : "")'>
    @if (this.MemberList != null)
    {
        <div id='table-wrapper'>
            <table id='table-header'>
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Aktív?</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Tagdíj befizetve</DataGridHeader>
                    </tr>
                </thead>
            </table>

            <table id='data' class="display nowrap">
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Aktív?</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Tagdíj befizetve</DataGridHeader>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var member in this.MemberList)
                    {
                        <tr>
                            <td><NavLink href="@($"/members/{member.MemberId}")">@member.Name</NavLink></td>
                            <td>@member.Active</td>
                            <td>@member.PaidUntil</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</main>

@if (this.SelectedMember != null)
{
    <section class='popup' id='content'>
        <div class='shadow'></div>
        <div class='body'>
            <NavLink href="/members" class='close'></NavLink>
            <div class='dynamic'>
                <table>
                    <tr>
                        <td>Név:</td>
                        <td>@this.SelectedMember.Name</td>
                    </tr>
                </table>
            </div>
        </div>
    </section>
}


@code
{
    [Parameter]
    public int ShowID { get; set; }

    List<Member> MemberList { get; set; }

    Member SelectedMember { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            using (GanzAdminDbContext db = new GanzAdminDbContext())
            {
                this.MemberList = db.Members.ToList();
            }
        });
    }

    protected override async Task OnParametersSetAsync()
    {
        await Task.Run(() =>
        {
            this.SelectedMember = this.MemberList.FirstOrDefault(m => m.MemberId == this.ShowID);
        });
    }

    private void AddMember()
    {
        using (GanzAdminDbContext db = new GanzAdminDbContext())
        {
        }
    }

    private void ModifMember()
    {

    }

    private void DeleteMember()
    {

    }
}
