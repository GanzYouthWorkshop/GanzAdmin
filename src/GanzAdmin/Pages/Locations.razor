@page "/locations"
@page "/locations/{PopupDisplay}"

@inherits DataHandlingController<Location>

<aside class='@(this.ItemList == null ? "loading" : "")'>
    @if (this.ItemList != null)
    {
        <TreeLevel Items="@(this.ItemList.ToEntities<Location>())" Root="@null" Filter="@((e, r) => (e as Location).ParentLocation == null && r == null || (e as Location).ParentLocation?.Id == r?.Id)" />
    }
    <AuthorizedView NeededRolesOR="@Permissions.EditLocations">
        <NavLink class="addlink" href="@($"/{this.BaseLink}/add")">Új @this.DataName</NavLink>
    </AuthorizedView>
</aside>

<main class='@(this.ItemList == null ? "loading" : "")'>
    @if (this.ItemList != null)
    {
        <div id='table-wrapper'>
            <table id='table-header'>
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Hely</DataGridHeader>
                    </tr>
                </thead>
            </table>

            <table id='data' class="display nowrap">
                <thead>
                    <tr>
                        <DataGridHeader IsPinnable IsSortable>Név</DataGridHeader>
                        <DataGridHeader IsCollapsible IsSortable>Hely</DataGridHeader>
                    </tr>
                </thead>

                <tbody>
                    @foreach (Location location in this.ItemList)
                    {
                        <tr>
                            <td><NavLink href="@($"/{this.BaseLink}/{location.Id}")">@location.Name</NavLink></td>
                            <td>@(location.ParentLocation != null ? location.ParentLocation.Name : "-")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</main>

@if (this.SelectedItem != null)
{
    <section class='popup' id='content'>
        <div class='shadow'></div>
        <div class='body'>
            <NavLink href="@($"/{this.BaseLink}")" class='close'></NavLink>
            <EditForm method="post" EditContext="new EditContext(true)" OnSubmit="OnDefaultAddEditSubmit">
                <h3>@this.PopupTitle</h3>
                <div class='dynamic'>
                    <SimpleTextField AuthOR="@Permissions.EditLocations" Type="text" Display="Név" Name="@nameof(Location.Name)" @bind-Value="this.SelectedItem.Temporal.Name" />
                    <ComboBox AuthOR="@Permissions.EditLocations" ItemType="@Location" Items="@this.ItemList" Owner="this.SelectedItem.Temporal" Name="@nameof(Location.ParentLocation)" Display="Hely" @bind-Value="this.SelectedItem.Temporal.ParentLocation" />
                </div>
                <AuthorizedView NeededRolesOR="@Permissions.EditLocations">
                    <button type='submit'>Küldés</button>
                </AuthorizedView>
                @if (this.PopupDisplay != "add")
                {
                    <AuthorizedView NeededRolesOR="@Permissions.DeleteLocations">
                        <input type='button' class="delete" value="Törlés" @onclick="OnDefaultDeleteSubmit" />
                    </AuthorizedView>
                }
            </EditForm>
        </div>
        @if (this.DialogLoading)
        {
            <div class='loading'> </div>
        }
    </section>
}


@code
{
    protected override string BaseLink { get; set; } = "locations";
    protected override string DataName { get; set; } = "hely";
}
