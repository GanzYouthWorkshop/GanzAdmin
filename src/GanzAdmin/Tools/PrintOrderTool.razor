<h3>Beszállítói prioritás beállítása</h3>
@foreach (Supplier supplier in this.supplierPriority)
{
    Supplier temp = supplier;
    <div>
        <ComboBox Inline
                  AuthOR="@Permissions.EditParts"
                  ItemType="@Supplier"
                  Items="GanzAdminDbEngine.Instance.GetCollection<Supplier>().FindAll()"
                  Name="@nameof(Part.SupplySources)"
                  Display="Beszállító"
                  @bind-Value="temp" />

        <a @onclick="() => this.supplierPriority.Remove(temp)"><i></i></a>
    </div>
}
<a @onclick="() => this.supplierPriority.Add(new Supplier())">Új prioritás</a>
<hr />

<h3>Rendelendő mennyiségek</h3>
@foreach (OrderData order in this.orderData)
{
    <div>
        <SimpleNumberField Type="text"
                            Display="@($"{order.Part.Name} ({order.Part.StockUnit})")"
                            Name="@order.Part.Name"
                            @bind-Value="order.Amount" />
    </div>
}
<hr />
<button @onclick="() => this.GenerateSheet()">Küldés</button>

@inherits ToolBase

@code
{
    private class OrderData
    {
        public Part Part { get; set; }
        public int Amount { get; set; }
    }

    private List<Supplier> supplierPriority = new List<Supplier>();
    private List<OrderData> orderData { get; set; }

    public PrintOrderTool()
    {
        this.Icon = "";
        this.Name = "Nyomtatható rendelés";
        this.Description = "Összegyűjti az összes kijelölt alkatrészt és a beállított prioritások alapján rendelőlapokat hoz létre.";
        this.SupportedEntities = new List<Type> { typeof(Part) };
    }

    protected override void OnInitialized()
    {
        this.Entities = this.ToolProvider.CheckedItems;
        this.orderData = this.Entities.FromEntities<Part>().Select(p => new OrderData { Part = p, Amount = p.MinimumStock }).ToList();
    }

    private void GenerateSheet()
    {
        string result = "<img src='./img/logo/basic.png'><table><tr><th>Megnevezés</th><th>Termékkód</th><th>Mennyiség</th></tr>";
        foreach(OrderData order in this.orderData)
        {
            result += $"<tr><td>{order.Part.Name}</td><td></td><td>{order.Amount}</td></tr>";
        }
        result += "</table>";

        GanzAdmin.Pages.Print.PrintUtils.PrintContent(this.JS, result);
    }
}
