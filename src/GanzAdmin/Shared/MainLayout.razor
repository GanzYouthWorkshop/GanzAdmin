@using  GanzAdmin.Authentication.Components;

@namespace GanzAdmin.Shared
@inherits LayoutComponentBase

@if (!this.m_HasRendered)
{
    <div id="loading-overlay"></div>
}
<AuthorizedView>
    <header>
        <h1>
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                GanzAdmin
            </NavLink>
        </h1>
        <form @onsubmit="OnSearch">
            <input type='text' name='search-string' id='search-string' placeholder='Keresés' autocomplete="off" @onchange="(e) => { this.Search = e.Value.ToString(); }">
            <input type='submit' name='search' id='search' value=''>

            <div id='auto-complete'>
                <div id='auto-complete-pool'>
                    <div class='global selected'>Kategória</div>
                    <div class='global'>Hely</div>
                    <div class='global'>Fontos</div>
                    <div class='global'>Hiányos</div>
                    <!--<?php
                    //Category::list_categories();
                    //Location::list_locations();
                    ?>-->
                </div>

                <div id='auto-complete-display'>
                </div>
            </div>

        </form>
        <NavMenu />
    </header>

    @Body

    <ToolChooser></ToolChooser>
</AuthorizedView>
<NonAuthorizedView>
    <LoginView />
</NonAuthorizedView>

@code
{
    [Inject]
    protected IJSRuntime JsRuntime { get; set; }

    [Inject]
    protected NavigationManager NavMan { get; set; }

    private string Search;

    private bool m_HasRendered;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JsRuntime.InvokeVoidAsync("onBlazorReady");
            this.m_HasRendered = true;
        }
        else
        {
            JsRuntime.InvokeVoidAsync("onBlazorRender");
        }
    }

    protected void OnSearch()
    {
        this.NavMan.NavigateTo($"search/{this.Search}");
    }
}