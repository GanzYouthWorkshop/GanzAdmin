@using GanzAdmin.Authentication;
@using GanzNet.Authentication;

<nav>
    <span id='selected-items' class="@ToolMenuClass" title='Eszközök' @onclick="() => { this.ToolProvider.ShowMenu = true; }"></span>

    <span id='menu' title='Menü'></span>
    <ul>
        <li><a href='/my-profile'>Saját adatok</a></li>
        <AuthorizedView NeededRolesOR="@Permissions.ListMembers"><li><NavLink href="/members">Tagok</NavLink></li></AuthorizedView>
        <AuthorizedView NeededRolesOR="@Permissions.ListParts"><li><a href='/parts'>Alkatrészek</a></li></AuthorizedView>
        <AuthorizedView NeededRolesOR="@Permissions.ListCategories"><li><a href='/categories'>Kategóriák</a></li></AuthorizedView>
        <AuthorizedView NeededRolesOR="@Permissions.ListLocations"><li><a href='/locations'>Helyek</a></li></AuthorizedView>
        <AuthorizedView NeededRolesOR="@Permissions.ListSuppliers"><li><a href='/suppliers'>Beszállítók</a></li></AuthorizedView>
        <li><NavLink href="/help">Súgó</NavLink></li>

        <li><a href="" @onclick="@OnLogOut" @onclick:preventDefault>Kilépés</a></li>
    </ul>
</nav>

@code
{
    [Inject]
    private IAuthProvider AuthProvider { get; set; }

    [Inject]
    protected NavigationManager NavMan { get; set; }

    [Inject]
    protected IJSRuntime JS { get; set; }

    [Inject]
    public ToolService ToolProvider { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.ToolProvider.TypeChanged += this.OnTypeChanged;
    }

    private void OnTypeChanged(object sender, Type e)
    {
        if(e != null)
        {
            this.InvokeAsync(new Action(this.StateHasChanged));
        }
    }

    public string ToolMenuClass
    {
        get
        {
            return this.ToolProvider.AvailableTools.Count > 0 ? "available" : "";
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            this.JS.InvokeVoidAsync("onMenuReady");
        }
    }


    private void OnLogOut()
    {
        this.AuthProvider.SignOut();
        this.NavMan.NavigateTo("/");
        this.JS.InvokeVoidAsync("alertify.success", "Viszontlátásra!");
    }
}